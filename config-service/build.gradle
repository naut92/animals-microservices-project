buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'


group 'animals-microservices-project'
project.version = '0.0.1'
sourceCompatibility = 1.8


repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    //Spring Cloud
    compile 'org.springframework.cloud:spring-cloud-config-server'

    //tests
    testCompile group: 'junit', name: 'junit', version: '4.12'

    //group = 'animals-project':
    //implementation('animals-project:animals-app:0.0.1')
}

task buildDocker(type: Docker, dependsOn: build) {
    project.group = 'animals-microservices-project'
    baseImage 'openjdk:8-jdk-alpine'
    workingDir('/app')
    addFile("build/libs/config-service-${project.version}.jar", './')
    setEnvironment('SPRING_PROFILES_ACTIVE', 'docker,cors')
    entryPoint(["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "config-service-${project.version}.jar"])
    exposePort(8089)
    push = false
}
