buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group 'animals-microservices-project'
project.version = '0.0.1'
sourceCompatibility = 1.8

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task buildDocker(type: Docker, dependsOn: build) {
    project.group = 'animals-microservices-project'
    baseImage 'openjdk:8-jdk-alpine'
    workingDir('/app')
    addFile("build/libs/proxy-service-${project.version}.jar", './')
    setEnvironment('SPRING_PROFILES_ACTIVE', 'docker,cors')
    entryPoint(["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", "proxy-service-${project.version}.jar"])
    exposePort(8063)
    push = false
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.3'
}